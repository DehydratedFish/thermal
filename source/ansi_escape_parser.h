#pragma once

#include "definitions.h"


u32 const EscapeSequenceMaxArgs = 16;
struct EscapeSequence {
    b32 valid;

    u32 kind;
    s32 args[EscapeSequenceMaxArgs];
    s32 arg_count;

    s32 length_in_bytes;
};

enum {
    ESCAPE_CSI_RESET = 0,

    ESCAPE_CSI_SET_BOLD = 1,

    ESCAPE_CSI_FOREGROUND_BLACK   = 30,
    ESCAPE_CSI_FOREGROUND_RED     = 31,
    ESCAPE_CSI_FOREGROUND_GREEN   = 32,
    ESCAPE_CSI_FOREGROUND_YELLOW  = 33,
    ESCAPE_CSI_FOREGROUND_BLUE    = 34,
    ESCAPE_CSI_FOREGROUND_MAGENTA = 35,
    ESCAPE_CSI_FOREGROUND_CYAN    = 36,
    ESCAPE_CSI_FOREGROUND_WHITE   = 37,
    ESCAPE_CSI_FOREGROUND         = 38,

    ESCAPE_CSI_BACKGROUND_BLACK   = 40,
    ESCAPE_CSI_BACKGROUND_RED     = 41,
    ESCAPE_CSI_BACKGROUND_GREEN   = 42,
    ESCAPE_CSI_BACKGROUND_YELLOW  = 43,
    ESCAPE_CSI_BACKGROUND_BLUE    = 44,
    ESCAPE_CSI_BACKGROUND_MAGENTA = 45,
    ESCAPE_CSI_BACKGROUND_CYAN    = 46,
    ESCAPE_CSI_BACKGROUND_WHITE   = 47,
    ESCAPE_CSI_BACKGROUND         = 48,

    ESCAPE_CSI_FOREGROUND_BRIGHT_BLACK   = 90,
    ESCAPE_CSI_FOREGROUND_BRIGHT_RED     = 91,
    ESCAPE_CSI_FOREGROUND_BRIGHT_GREEN   = 92,
    ESCAPE_CSI_FOREGROUND_BRIGHT_YELLOW  = 93,
    ESCAPE_CSI_FOREGROUND_BRIGHT_BLUE    = 94,
    ESCAPE_CSI_FOREGROUND_BRIGHT_MAGENTA = 95,
    ESCAPE_CSI_FOREGROUND_BRIGHT_CYAN    = 96,
    ESCAPE_CSI_FOREGROUND_BRIGHT_WHITE   = 97,

    ESCAPE_CSI_BACKGROUND_BRIGHT_BLACK   = 100,
    ESCAPE_CSI_BACKGROUND_BRIGHT_RED     = 101,
    ESCAPE_CSI_BACKGROUND_BRIGHT_GREEN   = 102,
    ESCAPE_CSI_BACKGROUND_BRIGHT_YELLOW  = 103,
    ESCAPE_CSI_BACKGROUND_BRIGHT_BLUE    = 104,
    ESCAPE_CSI_BACKGROUND_BRIGHT_MAGENTA = 105,
    ESCAPE_CSI_BACKGROUND_BRIGHT_CYAN    = 106,
    ESCAPE_CSI_BACKGROUND_BRIGHT_WHITE   = 107,

    ESCAPE_CSI_NAMED_COLORS_MAX          = 108,
};


EscapeSequence parse_escape_sequence(String str);

u32 ansi_4bit_color(u32 color_name);
u32 ansi_8bit_color(u8 index);

